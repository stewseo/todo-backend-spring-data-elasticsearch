plugins {
    id "org.springframework.boot" version "2.7.8"
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'
    id 'java'
    id 'war'
}

group 'com.example'
version '1.3.0-SNAPSHOT'

apply plugin: 'war'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

bootWar {
    destinationDirectory.set(file("$rootDir/libs"))
    archiveBaseName.set('spring-data-elasticsearch')
    archiveVersion.set(project.version)
    manifest {
        attributes 'Start-Class': 'com.example.TodoApplication'
    }
}

repositories {
    mavenCentral()
}

dependencies {

    implementation buildLibs.spring.boot.gradle

    implementation buildLibs.spring.boot.starter.web
    implementation buildLibs.spring.boot.starter.parent

    implementation buildLibs.spring.data.elasticsearch


    implementation buildLibs.jackson.core

    implementation buildLibs.jakarta.json.bind
    implementation buildLibs.jakarta.json.processing

//    implementation buildLibs.eclipse.parsson
//
//    testImplementation("org.eclipse:yasson:2.0.4") {
//        // Exclude Glassfish as we use Parsson (basically Glassfish renamed in the Jakarta namespace).
//        exclude(group: "org.glassfish", module: "jakarta.json")
//    }

    compileOnly buildLibs.lombok
    annotationProcessor buildLibs.lombok

    testCompileOnly buildLibs.lombok
    testAnnotationProcessor buildLibs.lombok

    testImplementation buildLibs.spring.boot.starter.test

}

test {
    useJUnitPlatform()
}
